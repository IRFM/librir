name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-on-linux:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pytest
        
        
#    - name: Lint with ruff
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
#        # default set of ruff rules with GitHub Annotations
#        ruff --format=github --target-version=py37 .
        
    - name: Configure & Build
      run: ./build.sh
    
    - name: Test with pytest
      run: |
        pip install -e .
        pytest tests/python
          
          
      
      
    
  build-on-windows:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pytest
        
        
#    - name: Lint with ruff
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
#        # default set of ruff rules with GitHub Annotations
#        ruff --format=github --target-version=py37 .
        
    - name: Configure & Build
      run: ./build.bat
    
    - name: Test with pytest
      run: |
        pip install -e .
        pytest tests/python
      
      
    # - name: Configure CMake
    #   # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
    #   # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
    #   run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    # - name: Build
    #   # Build your program with the given configuration
    #   run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   # Execute tests defined by the CMake configuration.
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest -C ${{env.BUILD_TYPE}}

